{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dropbox\\\\work\\\\dootrix\\\\planets\\\\Planets\\\\Planets.Front\\\\planets\\\\src\\\\Components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Planets from './Planets';\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlanetSelected = id => {\n      this.setState(({\n        planets\n      }) => ({\n        selectedPlanet: planets.find(planet => planet.id === id),\n        editingPlanet: false\n      }));\n    };\n\n    this.handleEditPlanet = id => {\n      this.setState(({\n        planets\n      }) => ({\n        selectedPlanet: planets.find(planet => planet.id === id),\n        editingPlanet: true\n      }));\n    };\n\n    this.handleEditSubmit = planet => {\n      let config = {\n        url: 'https://localhost:5001/api/Planet',\n        method: 'put',\n        data: planet.planet,\n        headers: {\n          Authorization: 'Bearer ' + this.state.jwt.token\n        }\n      };\n      axios.request(config).then(response => {\n        this.setState({\n          editingPlanet: false,\n          planets: [...this.state.planets.filter(p => p.id !== planet.planet.id), planet.planet],\n          selectedPlanet: planet.planet\n        });\n      }).catch(error => {\n        this.setState({});\n      });\n    };\n\n    this.handleAuthenticationSubmit = password => {\n      axios.put('https://localhost:5001/api/Authentication', {\n        Password: password.password\n      }).then(response => {\n        this.setState({\n          password: {},\n          jwt: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          errors: error.response.data\n        });\n      });\n    };\n\n    this.handleErrorDialogClose = () => {\n      this.setState({\n        errors: []\n      });\n    };\n\n    this.handleAuthenticateDialogClose = () => {\n      this.setState({\n        authenticating: {}\n      });\n    };\n\n    this.state = {\n      planets: [],\n      isLoading: true,\n      errors: [],\n      selectedPlanet: {},\n      editingPlanet: false,\n      password: {},\n      jwt: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getPlanets();\n  }\n\n  getPlanets() {\n    axios.get('https://localhost:5001/api/Planet').then(response => {\n      this.setState({\n        planets: response.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      errors: error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Planets, {\n      selectedPlanet: this.state.selectedPlanet,\n      planets: this.state.planets,\n      onSelect: this.handlePlanetSelected,\n      onEdit: this.handleEditPlanet,\n      editingPlanet: this.state.editingPlanet,\n      onSubmit: this.handleEditSubmit,\n      errors: this.state.errors,\n      handleErrorDialogClose: this.handleErrorDialogClose,\n      handleAuthenticateDialogClose: this.handleAuthenticateDialogClose,\n      authenticating: this.state.authenticating,\n      onSubmitAuthentication: this.handleAuthenticationSubmit,\n      jwt: this.state.jwt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Dropbox/work/dootrix/planets/Planets/Planets.Front/planets/src/Components/App.jsx"],"names":["React","Component","axios","Planets","constructor","props","handlePlanetSelected","id","setState","planets","selectedPlanet","find","planet","editingPlanet","handleEditPlanet","handleEditSubmit","config","url","method","data","headers","Authorization","state","jwt","token","request","then","response","filter","p","catch","error","handleAuthenticationSubmit","password","put","Password","errors","handleErrorDialogClose","handleAuthenticateDialogClose","authenticating","isLoading","componentDidMount","getPlanets","get","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,cAAcF,SAAd,CAAwB;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,oBAvBmB,GAuBIC,EAAE,IAAI;AAC3B,WAAKC,QAAL,CAAc,CAAE;AAAEC,QAAAA;AAAF,OAAF,MAAoB;AAChCC,QAAAA,cAAc,EAAED,OAAO,CAACE,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcA,EAArC,CADgB;AAEhCM,QAAAA,aAAa,EAAE;AAFiB,OAApB,CAAd;AAID,KA5BkB;;AAAA,SA8BnBC,gBA9BmB,GA8BAP,EAAE,IAAI;AACvB,WAAKC,QAAL,CAAc,CAAE;AAAEC,QAAAA;AAAF,OAAF,MAAoB;AAChCC,QAAAA,cAAc,EAAED,OAAO,CAACE,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcA,EAArC,CADgB;AAEhCM,QAAAA,aAAa,EAAE;AAFiB,OAApB,CAAd;AAID,KAnCkB;;AAAA,SAqCnBE,gBArCmB,GAqCAH,MAAM,IAAI;AAC3B,UAAII,MAAM,GAAG;AACXC,QAAAA,GAAG,EAAE,mCADM;AAEXC,QAAAA,MAAM,EAAG,KAFE;AAGXC,QAAAA,IAAI,EAAGP,MAAM,CAACA,MAHH;AAIXQ,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKC,KAAL,CAAWC,GAAX,CAAeC;AADnC;AAJE,OAAb;AAQAtB,MAAAA,KAAK,CACAuB,OADL,CACaT,MADb,EAEKU,IAFL,CAEWC,QAAD,IAAc;AAClB,aAAKnB,QAAL,CAAc;AACZK,UAAAA,aAAa,EAAE,KADH;AAEZJ,UAAAA,OAAO,EAAE,CAAC,GAAG,KAAKa,KAAL,CAAWb,OAAX,CAAmBmB,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACtB,EAAF,KAASK,MAAM,CAACA,MAAP,CAAcL,EAAtD,CAAJ,EAA+DK,MAAM,CAACA,MAAtE,CAFG;AAGZF,UAAAA,cAAc,EAAEE,MAAM,CAACA;AAHX,SAAd;AAKD,OARL,EAQOkB,KARP,CAQcC,KAAD,IAAW;AAAE,aAAKvB,QAAL,CAAc,EAAd;AAAmB,OAR7C;AASD,KAvDkB;;AAAA,SAyDnBwB,0BAzDmB,GAyDUC,QAAQ,IAAI;AACvC/B,MAAAA,KAAK,CACAgC,GADL,CACS,2CADT,EACsD;AAAEC,QAAAA,QAAQ,EAAGF,QAAQ,CAACA;AAAtB,OADtD,EAEKP,IAFL,CAEWC,QAAD,IAAc;AAClB,aAAKnB,QAAL,CAAc;AACZyB,UAAAA,QAAQ,EAAE,EADE;AAEZV,UAAAA,GAAG,EAAEI,QAAQ,CAACR;AAFF,SAAd;AAID,OAPL,EAOOW,KAPP,CAOcC,KAAD,IAAW;AAAE,aAAKvB,QAAL,CAAc;AAAC4B,UAAAA,MAAM,EAAEL,KAAK,CAACJ,QAAN,CAAeR;AAAxB,SAAd;AAA8C,OAPxE;AAQD,KAlEkB;;AAAA,SAoEnBkB,sBApEmB,GAoEM,MAAM;AAC7B,WAAK7B,QAAL,CAAc;AAAC4B,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD,KAtEkB;;AAAA,SAwEnBE,6BAxEmB,GAwEa,MAAM;AACpC,WAAK9B,QAAL,CAAc;AAAE+B,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KA1EkB;;AAEjB,SAAKjB,KAAL,GAAa;AACXb,MAAAA,OAAO,EAAE,EADE;AACE+B,MAAAA,SAAS,EAAE,IADb;AACmBJ,MAAAA,MAAM,EAAE,EAD3B;AAC+B1B,MAAAA,cAAc,EAAE,EAD/C;AACmDG,MAAAA,aAAa,EAAE,KADlE;AACyEoB,MAAAA,QAAQ,EAAE,EADnF;AACuFV,MAAAA,GAAG,EAAE;AAD5F,KAAb;AAGD;;AAEDkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACXxC,IAAAA,KAAK,CACFyC,GADH,CACO,mCADP,EAEGjB,IAFH,CAESC,QAAD,IAAc;AAClB,WAAKnB,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEkB,QAAQ,CAACR,IADN;AAEZqB,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAPH,EAQGV,KARH,CAQUC,KAAD,IAAW,KAAKvB,QAAL,CAAc;AAAE4B,MAAAA,MAAM,EAAEL,KAAV;AAAiBS,MAAAA,SAAS,EAAE;AAA5B,KAAd,CARpB;AASD;;AAuDDI,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,OAAD;AACE,MAAA,cAAc,EAAE,KAAKtB,KAAL,CAAWZ,cAD7B;AAEE,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWb,OAFtB;AAGE,MAAA,QAAQ,EAAE,KAAKH,oBAHjB;AAIE,MAAA,MAAM,EAAE,KAAKQ,gBAJf;AAKE,MAAA,aAAa,EAAE,KAAKQ,KAAL,CAAWT,aAL5B;AAME,MAAA,QAAQ,EAAE,KAAKE,gBANjB;AAOE,MAAA,MAAM,EAAE,KAAKO,KAAL,CAAWc,MAPrB;AAQE,MAAA,sBAAsB,EAAE,KAAKC,sBAR/B;AASE,MAAA,6BAA6B,EAAE,KAAKC,6BATtC;AAUE,MAAA,cAAc,EAAE,KAAKhB,KAAL,CAAWiB,cAV7B;AAWE,MAAA,sBAAsB,EAAE,KAAKP,0BAX/B;AAYE,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWC,GAZlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAkBD;;AAhGoC","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Planets from './Planets';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: [], isLoading: true, errors: [], selectedPlanet: {}, editingPlanet: false, password: {}, jwt: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getPlanets();\n  }\n\n  getPlanets() {\n    axios\n      .get('https://localhost:5001/api/Planet')\n      .then((response) => {\n        this.setState({\n          planets: response.data,\n          isLoading: false,\n        });\n      })\n      .catch((error) => this.setState({ errors: error, isLoading: false }));\n  }\n\n  handlePlanetSelected = id => {\n    this.setState(( { planets } ) => ({\n      selectedPlanet: planets.find(planet => planet.id === id),\n      editingPlanet: false\n    }))\n  }\n\n  handleEditPlanet = id => {\n    this.setState(( { planets } ) => ({\n      selectedPlanet: planets.find(planet => planet.id === id),\n      editingPlanet: true\n    }))\n  }\n\n  handleEditSubmit = planet => {\n    let config = {\n      url: 'https://localhost:5001/api/Planet',\n      method : 'put',\n      data : planet.planet,\n      headers: {\n        Authorization: 'Bearer ' + this.state.jwt.token\n      }};\n\n    axios\n        .request(config)\n        .then((response) => {\n          this.setState({\n            editingPlanet: false,\n            planets: [...this.state.planets.filter(p => p.id !== planet.planet.id), planet.planet],\n            selectedPlanet: planet.planet\n          })\n        }).catch((error) => { this.setState({ })});\n  }\n\n  handleAuthenticationSubmit = password => {\n    axios\n        .put('https://localhost:5001/api/Authentication', { Password : password.password } )\n        .then((response) => {\n          this.setState({\n            password: {},\n            jwt: response.data\n          })\n        }).catch((error) => { this.setState({errors: error.response.data })});\n  }\n\n  handleErrorDialogClose = () => {\n    this.setState({errors: []})\n  }\n\n  handleAuthenticateDialogClose = () => {\n    this.setState({ authenticating: {}})\n  }\n\n  render() {\n    return (\n      <>\n        <Planets\n          selectedPlanet={this.state.selectedPlanet}\n          planets={this.state.planets}\n          onSelect={this.handlePlanetSelected}\n          onEdit={this.handleEditPlanet}\n          editingPlanet={this.state.editingPlanet}\n          onSubmit={this.handleEditSubmit}\n          errors={this.state.errors}\n          handleErrorDialogClose={this.handleErrorDialogClose}\n          handleAuthenticateDialogClose={this.handleAuthenticateDialogClose}\n          authenticating={this.state.authenticating}\n          onSubmitAuthentication={this.handleAuthenticationSubmit}\n          jwt={this.state.jwt}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}