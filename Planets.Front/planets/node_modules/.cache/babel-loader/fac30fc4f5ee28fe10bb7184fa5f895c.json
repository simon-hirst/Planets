{"ast":null,"code":"import _slicedToArray from \"D:\\\\Dropbox\\\\work\\\\dootrix\\\\planets\\\\Planets\\\\Planets.Front\\\\planets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Dropbox\\\\work\\\\dootrix\\\\planets\\\\Planets\\\\Planets.Front\\\\planets\\\\src\\\\Components\\\\Planets\\\\ErrorDialog.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default function ErrorDialog(errors) {\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, errors ? React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Invalid input\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, errors.map(error => React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, error))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"OK\"))) : null);\n}","map":{"version":3,"sources":["D:/Dropbox/work/dootrix/planets/Planets/Planets.Front/planets/src/Components/Planets/ErrorDialog.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ErrorDialog","errors","useState","open","setOpen","handleClose","map","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAAA,0BAClBR,KAAK,CAACS,QAAN,CAAe,IAAf,CADkB;AAAA;AAAA,QACnCC,IADmC;AAAA,QAC7BC,OAD6B;;AAG1C,QAAMC,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE,0CACMH,MAAM,GAAG,oBAAC,MAAD;AACP,IAAA,IAAI,EAAEE,IADC;AAEP,IAAA,OAAO,EAAEE,WAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIP,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJO,EAKP,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,CAACK,GAAP,CAAYC,KAAD,IACR,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CADH,CADL,CALO,EAYP,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAZO,CAAH,GAiBI,IAlBhB,CADF;AAsBD","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ErrorDialog(errors) {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n        { errors ? <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogTitle>Invalid input</DialogTitle>\n            <DialogContent>\n                {errors.map((error) => (\n                    <DialogContentText>\n                        {error}\n                    </DialogContentText>\n                ))}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog> : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}