{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dropbox\\\\work\\\\dootrix\\\\planets\\\\Planets\\\\Planets.Front\\\\planets\\\\src\\\\Components\\\\Page.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport Planet from './Planet';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: [],\n      isLoading: true,\n      errors: null\n    };\n  } // getPlanets() {\n  //   axios\n  //     .get('https://localhost:5001/api/Planet')\n  //     .then((response) => {\n  //       this.setState({\n  //         planets: response.data,\n  //         isLoading: false,\n  //       });\n  //     })\n  //     .catch((error) => this.setState({ error, isLoading: false }));\n  // }\n  // getPlanet(planetId) {\n  //   let planet;\n  //   axios\n  //     .get(`https://localhost:5001/api/Planet/${planetId}`)\n  //     .then((response) => {\n  //       console.log(response);\n  //       planet = response;\n  //     })\n  //     .catch((error) => this.setState({ error, isLoading: false }));\n  //   return planet;\n  // }\n\n\n  putPlanet() {}\n\n  updatePlanet(planet) {\n    const planets = this.state.planets;\n    planets[planets.findIndex(x => x.id === planet.id)] = planet;\n    this.setState({\n      planets\n    });\n  } // componentDidMount() {\n  //   this.getPlanets();\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          planets = _this$state.planets;\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !isLoading ? planets.map(planet => {\n      const id = planet.id,\n            name = planet.name,\n            image = planet.image,\n            distanceFromSun = planet.distanceFromSun,\n            mass = planet.mass,\n            diameter = planet.diameter;\n      return React.createElement(\"div\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Planet, {\n        id: id,\n        name: name,\n        image: image,\n        distanceFromSun: distanceFromSun,\n        mass: mass,\n        diameter: diameter,\n        getPlanet: this.getPlanet,\n        updatePlanet: this.updatePlanet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Loading...\"))));\n  }\n\n}\n\nexport default Page;","map":{"version":3,"sources":["D:/Dropbox/work/dootrix/planets/Planets/Planets.Front/planets/src/Components/Page.jsx"],"names":["React","ReactDOM","axios","Container","Planet","Page","Component","constructor","props","state","planets","isLoading","errors","putPlanet","updatePlanet","planet","findIndex","x","id","setState","render","map","name","image","distanceFromSun","mass","diameter","getPlanet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD,GARgC,CAUjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,SAAS,GAAE,CAEV;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAS;AAAA,UACXL,OADW,GACC,KAAKD,KADN,CACXC,OADW;AAEnBA,IAAAA,OAAO,CAACA,OAAO,CAACM,SAAR,CAAmBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,MAAM,CAACG,EAAzC,CAAD,CAAP,GAAwDH,MAAxD;AACA,SAAKI,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD,GA1CgC,CA4CjC;AACA;AACA;;;AAEAU,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKX,KAD7B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,OADZ,eACYA,OADZ;AAEP,WACE,0CACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,SAAD,GACCD,OAAO,CAACW,GAAR,CAAaN,MAAD,IAAY;AAAA,YAEpBG,EAFoB,GAGlBH,MAHkB,CAEpBG,EAFoB;AAAA,YAEhBI,IAFgB,GAGlBP,MAHkB,CAEhBO,IAFgB;AAAA,YAEVC,KAFU,GAGlBR,MAHkB,CAEVQ,KAFU;AAAA,YAEHC,eAFG,GAGlBT,MAHkB,CAEHS,eAFG;AAAA,YAEcC,IAFd,GAGlBV,MAHkB,CAEcU,IAFd;AAAA,YAEoBC,QAFpB,GAGlBX,MAHkB,CAEoBW,QAFpB;AAItB,aACE;AAAK,QAAA,GAAG,EAAER,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,EAAE,EAAEA,EADN;AAEE,QAAA,IAAI,EAAEI,IAFR;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,eAAe,EAAEC,eAJnB;AAKE,QAAA,IAAI,EAAEC,IALR;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,SAAS,EAAE,KAAKC,SAPlB;AAQE,QAAA,YAAY,EAAE,KAAKb,YARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD,KAlBD,CADD,GAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,CADF,CADF,CADF;AA+BD;;AAjFgC;;AAoFnC,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport Planet from './Planet';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: [],\n      isLoading: true,\n      errors: null,\n    };\n  }\n\n  // getPlanets() {\n  //   axios\n  //     .get('https://localhost:5001/api/Planet')\n  //     .then((response) => {\n  //       this.setState({\n  //         planets: response.data,\n  //         isLoading: false,\n  //       });\n  //     })\n  //     .catch((error) => this.setState({ error, isLoading: false }));\n  // }\n\n  // getPlanet(planetId) {\n  //   let planet;\n  //   axios\n  //     .get(`https://localhost:5001/api/Planet/${planetId}`)\n  //     .then((response) => {\n  //       console.log(response);\n  //       planet = response;\n  //     })\n  //     .catch((error) => this.setState({ error, isLoading: false }));\n  //   return planet;\n  // }\n\n  putPlanet(){\n\n  }\n\n  updatePlanet(planet) {\n    const { planets } = this.state;\n    planets[planets.findIndex((x) => x.id === planet.id)] = planet;\n    this.setState({ planets });\n  }\n\n  // componentDidMount() {\n  //   this.getPlanets();\n  // }\n\n  render() {\n    const { isLoading, planets } = this.state;\n    return (\n      <>\n        <Container maxWidth=\"sm\">\n          <div>\n            {!isLoading ? (\n              planets.map((planet) => {\n                const {\n                  id, name, image, distanceFromSun, mass, diameter,\n                } = planet;\n                return (\n                  <div key={id}>\n                    <Planet\n                      id={id}\n                      name={name}\n                      image={image}\n                      distanceFromSun={distanceFromSun}\n                      mass={mass}\n                      diameter={diameter}\n                      getPlanet={this.getPlanet}\n                      updatePlanet={this.updatePlanet}\n                    />\n                  </div>\n                );\n              })\n            ) : (\n              <p>Loading...</p>\n            )}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}